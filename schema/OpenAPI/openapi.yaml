openapi: 3.0.0
servers:
  - description: SS12000
    url: 'https://virtserver.swaggerhub.com/TK450-AG10/SS12000/1.0.0'
info:
  description: |
    This is a test implementation of SS12000 v2
    [TK450](https://www.sis.se/standardutveckling/tksidor/tk400499/sistk450/)
  version: 1.0.0
  title: SS12000
  termsOfService: 'https://www.sis.se/standardutveckling/tksidor/tk400499/sistk450/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: person
    description: Operations about person
paths:
  /person:
    post:
      tags:
        - person
      summary: Create person
      description: This can only be done by the logged in person.
      operationId: createPerson
      responses:
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: >
                    I SS12000 är det ett krav att ett objekt har samma
                    överförings-ID mellan samtliga ingående system och
                    således är det ett enda namespace för de gemensamma ID:na.
                    Objektidentifikatorn är den nyckel som skall vara persistent
                    mellan olika processer (enl figur 1).
                eduPersonPrincipalName:
                  type: string
                  description: >
                    Den identifierare som ska användas för att identifiera användaren
                    i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent
                    och globalt unik sträng. Den ska bestå av en lokalt unik
                    användaridentifierare, ett ’@’ och en domän.
                    En domän är ofta, men inte nödvändigtvis, samma som organisationens
                    internet-domännamn.
                    _Exempel: kalko@edu.goteborg.se_
                norEduPersonNIN:
                  type: object
                  description: Personnummer.
                  properties:
                    value:
                      type: string
                      description: |
                        Svenskt personnummer, tilldelat personnummer eller Skatteverkets
                        samordningsnummer för personen. Ska anges med 12 siffror utan
                        separatorer. _Exempel: 200112240123_

                        Samordningsnummer ska anges med 12 siffror utan separator.
                        Födelsedagen adderas med talet 60, det vill säga någon född den 24
                        i en månad får talet 84 som dag. _Exempel: 200112840123_

                        Saknas både personnummer och samordningsnummer så förekommer det att
                        "tillfälligt personnummer" definieras i elevregistret. Dessa är möjliga
                        att beskriva i detta fält och i så fall tillåts de två första positionerna
                        efter datumdelen att vara bokstäver. _Exempel: 20130101TF01_
                      pattern: '^\d{8}[A-Z0-9]{2}\d{2}$'
                    nationality:
                      type: string
                      default: SE
                      description: >
                        Landskod för det land som personnumret härstammar från,
                        enligt ISO 3166-1 alpha-2.
                  required: value

                givenName:
                  type: string
                  description: Förnamn.
                middleName:
                  type: string
                  description: Mellannamn.
                familyName:
                  type: string
                  description: Efternamn.
                emails:
                  type: array
                  description:
                  items:
                    email:
                      type: string
                      format: email
                    role:
                      type: string
                      enum:
                        - anställd
                        - elev
                        - vårdnadshavare
                  required: email
                phoneNumbers:
                  type: array
                  description: En lista med telefonnummer till personen.
                  requried: number
                  items:
                    number:
                      type: string
                      description: Telefonnumret.
                    type:
                      type: string
                      enum:
                        - hem
                        - arbete
                    mobile:
                      type: boolean
                      default: true
                addresses:
                  type: array
                  description: Personens postadresser.
                  items:
                    type:
                      type: string
                      default: folkbokföringsadress
                      enum:
                        - folkbokföringsadress
                        - vistelseadress
                        - fakturaadress
                    streetAddress:
                      type: string
                      description: Gatuadress.
                    locality:
                      type: string
                      description: Postort.
                    postalCode:
                      type: string
                      description: Postadress.
                    country:
                      type: string
                      description: Land.
                photos:
                  type: array
                  description: Bild på personen.
                  items:
                    photo:
                      type: string
                      format: uri
                      description: En länk där bildfilen kan hämtas.
                    type:
                      type: string
                      description: Typ av bild.
                      enum:
                        - photo
                        - thumbnail
        description: Created person object
        required: true
    put:
      tags:
        - person
      summary: Updated person
      description: This can only be done by the logged in person.
      operationId: updatePerson
      responses:
        '400':
          description: Invalid person supplied
        '404':
          description: Person not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: >
                    I SS12000 är det ett krav att ett objekt har samma
                    överförings-ID mellan samtliga ingående system och
                    således är det ett enda namespace för de gemensamma ID:na.
                    Objektidentifikatorn är den nyckel som skall vara persistent
                    mellan olika processer (enl figur 1).
                eduPersonPrincipalName:
                  type: string
                  description: >
                    Den identifierare som ska användas för att identifiera användaren
                    i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent
                    och globalt unik sträng. Den ska bestå av en lokalt unik
                    användaridentifierare, ett ’@’ och en domän.
                    En domän är ofta, men inte nödvändigtvis, samma som organisationens
                    internet-domännamn.
                    _Exempel: kalko@edu.goteborg.se_
                norEduPersonNIN:
                  type: object
                  description: Personnummer.
                  properties:
                    value:
                      type: string
                      description: |
                        Svenskt personnummer, tilldelat personnummer eller Skatteverkets
                        samordningsnummer för personen. Ska anges med 12 siffror utan
                        separatorer. _Exempel: 200112240123_

                        Samordningsnummer ska anges med 12 siffror utan separator.
                        Födelsedagen adderas med talet 60, det vill säga någon född den 24
                        i en månad får talet 84 som dag. _Exempel: 200112840123_

                        Saknas både personnummer och samordningsnummer så förekommer det att
                        "tillfälligt personnummer" definieras i elevregistret. Dessa är möjliga
                        att beskriva i detta fält och i så fall tillåts de två första positionerna
                        efter datumdelen att vara bokstäver. _Exempel: 20130101TF01_
                      pattern: '^\d{8}[A-Z0-9]{2}\d{2}$'
                    nationality:
                      type: string
                      default: SE
                      description: >
                        Landskod för det land som personnumret härstammar från,
                        enligt ISO 3166-1 alpha-2.
                  required: value

                givenName:
                  type: string
                  description: Förnamn.
                middleName:
                  type: string
                  description: Mellannamn.
                familyName:
                  type: string
                  description: Efternamn.
                emails:
                  type: array
                  description:
                  items:
                    email:
                      type: string
                      format: email
                    role:
                      type: string
                      enum:
                        - anställd
                        - elev
                        - vårdnadshavare
                  required: email
                phoneNumbers:
                  type: array
                  description: En lista med telefonnummer till personen.
                  requried: number
                  items:
                    number:
                      type: string
                      description: Telefonnumret.
                    type:
                      type: string
                      enum:
                        - hem
                        - arbete
                    mobile:
                      type: boolean
                      default: true
                addresses:
                  type: array
                  description: Personens postadresser.
                  items:
                    type:
                      type: string
                      default: folkbokföringsadress
                      enum:
                        - folkbokföringsadress
                        - vistelseadress
                        - fakturaadress
                    streetAddress:
                      type: string
                      description: Gatuadress.
                    locality:
                      type: string
                      description: Postort.
                    postalCode:
                      type: string
                      description: Postadress.
                    country:
                      type: string
                      description: Land.
                photos:
                  type: array
                  description: Bild på personen.
                  items:
                    photo:
                      type: string
                      format: uri
                      description: En länk där bildfilen kan hämtas.
                    type:
                      type: string
                      description: Typ av bild.
                      enum:
                        - photo
                        - thumbnail
        description: Updated person object
        required: true
  /persons/:
    get:
      tags:
        - person
      summary: Get persons
      operationId: getAllPersons
      parameters:
        - $ref: '#/components/parameters/FilterParam'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Person'
            application/xml:
              schema:
                $ref: 'schemas.yaml#/Person'
        '400':
          description: Invalid personname supplied
        '404':
          description: Person not found
  /person/{id}:
    get:
      tags:
        - person
      summary: Get person by person name
      operationId: getPersonByName
      parameters:
        - name: id
          in: path
          description: The name that needs to be fetched. Use person1 for testing.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Person'
            application/xml:
              schema:
                $ref: 'schemas.yaml#/Person'
        '400':
          description: Invalid personname supplied
        '404':
          description: Person not found
    delete:
      tags:
        - person
      summary: Delete person
      description: This can only be done by the logged in person.
      operationId: deletePerson
      parameters:
        - name: id
          in: path
          description: The person that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid personname supplied
        '404':
          description: Person not found
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Activity:
      $ref: 'Activity.yaml#/Activity'
    AggregatedAttendance:
      $ref: 'AggregatedAttendance.yaml#/AggregatedAttendance'
    Attenance:
      $ref: 'Attendance.yaml#/Attendance'
    CalendarEvent:
      $ref: 'CalendarEvent.yaml#/CalendarEvent'
#    CalendarEventResponse:
#      $ref: 'CalendarEvent.yaml#/CalendarEventResponse'
#    ChildAttendanceEvent:
#      $ref: 'ChildCareAttendance.yaml'
  parameters:
    FilterParam:
      in: query
      name: filter
      required: false
      schema:
        type: string
      description: >-
        Filters according to
        [RFC7644](https://tools.ietf.org/html/rfc7644#section-3.4.2.2).
