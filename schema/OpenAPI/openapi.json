{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "SS12000",
      "url": "https://virtserver.swaggerhub.com/TK450-AG10/SS12000/1.0.0"
    }
  ],
  "info": {
    "description": "This is a test implementation of SS12000 v2\n[TK450](https://www.sis.se/standardutveckling/tksidor/tk400499/sistk450/)\n",
    "version": "1.0.0",
    "title": "SS12000",
    "termsOfService": "https://www.sis.se/standardutveckling/tksidor/tk400499/sistk450/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "person",
      "description": "Operations about person"
    }
  ],
  "paths": {
    "/person": {
      "post": {
        "tags": [
          "person"
        ],
        "summary": "Create person",
        "description": "This can only be done by the logged in person.",
        "operationId": "createPerson",
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "I SS12000 är det ett krav att ett objekt har samma överförings-ID mellan samtliga ingående system och således är det ett enda namespace för de gemensamma ID:na. Objektidentifikatorn är den nyckel som skall vara persistent mellan olika processer (enl figur 1).\n"
                  },
                  "eduPersonPrincipalName": {
                    "type": "string",
                    "description": "Den identifierare som ska användas för att identifiera användaren i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent och globalt unik sträng. Den ska bestå av en lokalt unik användaridentifierare, ett ’@’ och en domän. En domän är ofta, men inte nödvändigtvis, samma som organisationens internet-domännamn. _Exempel: kalko@edu.goteborg.se_\n"
                  },
                  "norEduPersonNIN": {
                    "type": "object",
                    "description": "Personnummer.",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "Svenskt personnummer, tilldelat personnummer eller Skatteverkets\nsamordningsnummer för personen. Ska anges med 12 siffror utan\nseparatorer. _Exempel: 200112240123_\n\nSamordningsnummer ska anges med 12 siffror utan separator.\nFödelsedagen adderas med talet 60, det vill säga någon född den 24\ni en månad får talet 84 som dag. _Exempel: 200112840123_\n\nSaknas både personnummer och samordningsnummer så förekommer det att\n\"tillfälligt personnummer\" definieras i elevregistret. Dessa är möjliga\natt beskriva i detta fält och i så fall tillåts de två första positionerna\nefter datumdelen att vara bokstäver. _Exempel: 20130101TF01_\n",
                        "pattern": "^\\d{8}[A-Z0-9]{2}\\d{2}$"
                      },
                      "nationality": {
                        "type": "string",
                        "default": "SE",
                        "description": "Landskod för det land som personnumret härstammar från, enligt ISO 3166-1 alpha-2.\n"
                      }
                    },
                    "required": "value"
                  },
                  "givenName": {
                    "type": "string",
                    "description": "Förnamn."
                  },
                  "middleName": {
                    "type": "string",
                    "description": "Mellannamn."
                  },
                  "familyName": {
                    "type": "string",
                    "description": "Efternamn."
                  },
                  "emails": {
                    "type": "array",
                    "description": null,
                    "items": {
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "anställd",
                          "elev",
                          "vårdnadshavare"
                        ]
                      }
                    },
                    "required": "email"
                  },
                  "phoneNumbers": {
                    "type": "array",
                    "description": "En lista med telefonnummer till personen.",
                    "requried": "number",
                    "items": {
                      "number": {
                        "type": "string",
                        "description": "Telefonnumret."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "hem",
                          "arbete"
                        ]
                      },
                      "mobile": {
                        "type": "boolean",
                        "default": true
                      }
                    }
                  },
                  "addresses": {
                    "type": "array",
                    "description": "Personens postadresser.",
                    "items": {
                      "type": {
                        "type": "string",
                        "default": "folkbokföringsadress",
                        "enum": [
                          "folkbokföringsadress",
                          "vistelseadress",
                          "fakturaadress"
                        ]
                      },
                      "streetAddress": {
                        "type": "string",
                        "description": "Gatuadress."
                      },
                      "locality": {
                        "type": "string",
                        "description": "Postort."
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Postadress."
                      },
                      "country": {
                        "type": "string",
                        "description": "Land."
                      }
                    }
                  },
                  "photos": {
                    "type": "array",
                    "description": "Bild på personen.",
                    "items": {
                      "photo": {
                        "type": "string",
                        "format": "uri",
                        "description": "En länk där bildfilen kan hämtas."
                      },
                      "type": {
                        "type": "string",
                        "description": "Typ av bild.",
                        "enum": [
                          "photo",
                          "thumbnail"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Created person object",
          "required": true
        }
      },
      "put": {
        "tags": [
          "person"
        ],
        "summary": "Updated person",
        "description": "This can only be done by the logged in person.",
        "operationId": "updatePerson",
        "responses": {
          "400": {
            "description": "Invalid person supplied"
          },
          "404": {
            "description": "Person not found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "I SS12000 är det ett krav att ett objekt har samma överförings-ID mellan samtliga ingående system och således är det ett enda namespace för de gemensamma ID:na. Objektidentifikatorn är den nyckel som skall vara persistent mellan olika processer (enl figur 1).\n"
                  },
                  "eduPersonPrincipalName": {
                    "type": "string",
                    "description": "Den identifierare som ska användas för att identifiera användaren i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent och globalt unik sträng. Den ska bestå av en lokalt unik användaridentifierare, ett ’@’ och en domän. En domän är ofta, men inte nödvändigtvis, samma som organisationens internet-domännamn. _Exempel: kalko@edu.goteborg.se_\n"
                  },
                  "norEduPersonNIN": {
                    "type": "object",
                    "description": "Personnummer.",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "Svenskt personnummer, tilldelat personnummer eller Skatteverkets\nsamordningsnummer för personen. Ska anges med 12 siffror utan\nseparatorer. _Exempel: 200112240123_\n\nSamordningsnummer ska anges med 12 siffror utan separator.\nFödelsedagen adderas med talet 60, det vill säga någon född den 24\ni en månad får talet 84 som dag. _Exempel: 200112840123_\n\nSaknas både personnummer och samordningsnummer så förekommer det att\n\"tillfälligt personnummer\" definieras i elevregistret. Dessa är möjliga\natt beskriva i detta fält och i så fall tillåts de två första positionerna\nefter datumdelen att vara bokstäver. _Exempel: 20130101TF01_\n",
                        "pattern": "^\\d{8}[A-Z0-9]{2}\\d{2}$"
                      },
                      "nationality": {
                        "type": "string",
                        "default": "SE",
                        "description": "Landskod för det land som personnumret härstammar från, enligt ISO 3166-1 alpha-2.\n"
                      }
                    },
                    "required": "value"
                  },
                  "givenName": {
                    "type": "string",
                    "description": "Förnamn."
                  },
                  "middleName": {
                    "type": "string",
                    "description": "Mellannamn."
                  },
                  "familyName": {
                    "type": "string",
                    "description": "Efternamn."
                  },
                  "emails": {
                    "type": "array",
                    "description": null,
                    "items": {
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "anställd",
                          "elev",
                          "vårdnadshavare"
                        ]
                      }
                    },
                    "required": "email"
                  },
                  "phoneNumbers": {
                    "type": "array",
                    "description": "En lista med telefonnummer till personen.",
                    "requried": "number",
                    "items": {
                      "number": {
                        "type": "string",
                        "description": "Telefonnumret."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "hem",
                          "arbete"
                        ]
                      },
                      "mobile": {
                        "type": "boolean",
                        "default": true
                      }
                    }
                  },
                  "addresses": {
                    "type": "array",
                    "description": "Personens postadresser.",
                    "items": {
                      "type": {
                        "type": "string",
                        "default": "folkbokföringsadress",
                        "enum": [
                          "folkbokföringsadress",
                          "vistelseadress",
                          "fakturaadress"
                        ]
                      },
                      "streetAddress": {
                        "type": "string",
                        "description": "Gatuadress."
                      },
                      "locality": {
                        "type": "string",
                        "description": "Postort."
                      },
                      "postalCode": {
                        "type": "string",
                        "description": "Postadress."
                      },
                      "country": {
                        "type": "string",
                        "description": "Land."
                      }
                    }
                  },
                  "photos": {
                    "type": "array",
                    "description": "Bild på personen.",
                    "items": {
                      "photo": {
                        "type": "string",
                        "format": "uri",
                        "description": "En länk där bildfilen kan hämtas."
                      },
                      "type": {
                        "type": "string",
                        "description": "Typ av bild.",
                        "enum": [
                          "photo",
                          "thumbnail"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Updated person object",
          "required": true
        }
      }
    },
    "/persons/": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Get persons",
        "operationId": "getAllPersons",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filters according to [RFC7644](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "I SS12000 är det ett krav att ett objekt har samma överförings-ID mellan samtliga ingående system och således är det ett enda namespace för de gemensamma ID:na. Objektidentifikatorn är den nyckel som skall vara persistent mellan olika processer (enl figur 1).\n"
                    },
                    "meta": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastModified": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "eduPersonPrincipalName": {
                      "type": "string",
                      "description": "Den identifierare som ska användas för att identifiera användaren i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent och globalt unik sträng. Den ska bestå av en lokalt unik användaridentifierare, ett ’@’ och en domän. En domän är ofta, men inte nödvändigtvis, samma som organisationens internet-domännamn. _Exempel: kalko@edu.goteborg.se_\n"
                    },
                    "norEduPersonNIN": {
                      "type": "object",
                      "description": "Personnummer.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "Svenskt personnummer, tilldelat personnummer eller Skatteverkets\nsamordningsnummer för personen. Ska anges med 12 siffror utan\nseparatorer. _Exempel: 200112240123_\n\nSamordningsnummer ska anges med 12 siffror utan separator.\nFödelsedagen adderas med talet 60, det vill säga någon född den 24\ni en månad får talet 84 som dag. _Exempel: 200112840123_\n\nSaknas både personnummer och samordningsnummer så förekommer det att\n\"tillfälligt personnummer\" definieras i elevregistret. Dessa är möjliga\natt beskriva i detta fält och i så fall tillåts de två första positionerna\nefter datumdelen att vara bokstäver. _Exempel: 20130101TF01_\n",
                          "pattern": "^\\d{8}[A-Z0-9]{2}\\d{2}$"
                        },
                        "nationality": {
                          "type": "string",
                          "default": "SE",
                          "description": "Landskod för det land som personnumret härstammar från, enligt ISO 3166-1 alpha-2.\n"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "givenName": {
                      "type": "string",
                      "description": "Förnamn."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Mellannamn."
                    },
                    "familyName": {
                      "type": "string",
                      "description": "Efternamn."
                    },
                    "emails": {
                      "type": "array",
                      "description": "Personens e-postadress. Kan anges per roll när behovet finns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "anställd",
                              "elev",
                              "vårdnadshavare"
                            ]
                          }
                        },
                        "required": [
                          "email"
                        ]
                      }
                    },
                    "phoneNumbers": {
                      "type": "array",
                      "description": "En lista med telefonnummer till personen.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "description": "Telefonnumret."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "hem",
                              "arbete"
                            ]
                          },
                          "mobile": {
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "addresses": {
                      "type": "array",
                      "description": "Personens postadresser.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "folkbokföringsadress",
                            "enum": [
                              "folkbokföringsadress",
                              "vistelseadress",
                              "fakturaadress"
                            ]
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "Gatuadress."
                          },
                          "locality": {
                            "type": "string",
                            "description": "Postort."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Postadress."
                          },
                          "country": {
                            "type": "string",
                            "description": "Land."
                          }
                        }
                      }
                    },
                    "photos": {
                      "type": "array",
                      "description": "Bild på personen.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "photo": {
                            "type": "string",
                            "format": "uri",
                            "description": "En länk där bildfilen kan hämtas."
                          },
                          "type": {
                            "type": "string",
                            "description": "Typ av bild.",
                            "enum": [
                              "photo",
                              "thumbnail"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "I SS12000 är det ett krav att ett objekt har samma överförings-ID mellan samtliga ingående system och således är det ett enda namespace för de gemensamma ID:na. Objektidentifikatorn är den nyckel som skall vara persistent mellan olika processer (enl figur 1).\n"
                    },
                    "meta": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastModified": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "eduPersonPrincipalName": {
                      "type": "string",
                      "description": "Den identifierare som ska användas för att identifiera användaren i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent och globalt unik sträng. Den ska bestå av en lokalt unik användaridentifierare, ett ’@’ och en domän. En domän är ofta, men inte nödvändigtvis, samma som organisationens internet-domännamn. _Exempel: kalko@edu.goteborg.se_\n"
                    },
                    "norEduPersonNIN": {
                      "type": "object",
                      "description": "Personnummer.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "Svenskt personnummer, tilldelat personnummer eller Skatteverkets\nsamordningsnummer för personen. Ska anges med 12 siffror utan\nseparatorer. _Exempel: 200112240123_\n\nSamordningsnummer ska anges med 12 siffror utan separator.\nFödelsedagen adderas med talet 60, det vill säga någon född den 24\ni en månad får talet 84 som dag. _Exempel: 200112840123_\n\nSaknas både personnummer och samordningsnummer så förekommer det att\n\"tillfälligt personnummer\" definieras i elevregistret. Dessa är möjliga\natt beskriva i detta fält och i så fall tillåts de två första positionerna\nefter datumdelen att vara bokstäver. _Exempel: 20130101TF01_\n",
                          "pattern": "^\\d{8}[A-Z0-9]{2}\\d{2}$"
                        },
                        "nationality": {
                          "type": "string",
                          "default": "SE",
                          "description": "Landskod för det land som personnumret härstammar från, enligt ISO 3166-1 alpha-2.\n"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "givenName": {
                      "type": "string",
                      "description": "Förnamn."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Mellannamn."
                    },
                    "familyName": {
                      "type": "string",
                      "description": "Efternamn."
                    },
                    "emails": {
                      "type": "array",
                      "description": "Personens e-postadress. Kan anges per roll när behovet finns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "anställd",
                              "elev",
                              "vårdnadshavare"
                            ]
                          }
                        },
                        "required": [
                          "email"
                        ]
                      }
                    },
                    "phoneNumbers": {
                      "type": "array",
                      "description": "En lista med telefonnummer till personen.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "description": "Telefonnumret."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "hem",
                              "arbete"
                            ]
                          },
                          "mobile": {
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "addresses": {
                      "type": "array",
                      "description": "Personens postadresser.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "folkbokföringsadress",
                            "enum": [
                              "folkbokföringsadress",
                              "vistelseadress",
                              "fakturaadress"
                            ]
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "Gatuadress."
                          },
                          "locality": {
                            "type": "string",
                            "description": "Postort."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Postadress."
                          },
                          "country": {
                            "type": "string",
                            "description": "Land."
                          }
                        }
                      }
                    },
                    "photos": {
                      "type": "array",
                      "description": "Bild på personen.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "photo": {
                            "type": "string",
                            "format": "uri",
                            "description": "En länk där bildfilen kan hämtas."
                          },
                          "type": {
                            "type": "string",
                            "description": "Typ av bild.",
                            "enum": [
                              "photo",
                              "thumbnail"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid personname supplied"
          },
          "404": {
            "description": "Person not found"
          }
        }
      }
    },
    "/person/{id}": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Get person by person name",
        "operationId": "getPersonByName",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be fetched. Use person1 for testing.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "I SS12000 är det ett krav att ett objekt har samma överförings-ID mellan samtliga ingående system och således är det ett enda namespace för de gemensamma ID:na. Objektidentifikatorn är den nyckel som skall vara persistent mellan olika processer (enl figur 1).\n"
                    },
                    "meta": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastModified": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "eduPersonPrincipalName": {
                      "type": "string",
                      "description": "Den identifierare som ska användas för att identifiera användaren i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent och globalt unik sträng. Den ska bestå av en lokalt unik användaridentifierare, ett ’@’ och en domän. En domän är ofta, men inte nödvändigtvis, samma som organisationens internet-domännamn. _Exempel: kalko@edu.goteborg.se_\n"
                    },
                    "norEduPersonNIN": {
                      "type": "object",
                      "description": "Personnummer.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "Svenskt personnummer, tilldelat personnummer eller Skatteverkets\nsamordningsnummer för personen. Ska anges med 12 siffror utan\nseparatorer. _Exempel: 200112240123_\n\nSamordningsnummer ska anges med 12 siffror utan separator.\nFödelsedagen adderas med talet 60, det vill säga någon född den 24\ni en månad får talet 84 som dag. _Exempel: 200112840123_\n\nSaknas både personnummer och samordningsnummer så förekommer det att\n\"tillfälligt personnummer\" definieras i elevregistret. Dessa är möjliga\natt beskriva i detta fält och i så fall tillåts de två första positionerna\nefter datumdelen att vara bokstäver. _Exempel: 20130101TF01_\n",
                          "pattern": "^\\d{8}[A-Z0-9]{2}\\d{2}$"
                        },
                        "nationality": {
                          "type": "string",
                          "default": "SE",
                          "description": "Landskod för det land som personnumret härstammar från, enligt ISO 3166-1 alpha-2.\n"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "givenName": {
                      "type": "string",
                      "description": "Förnamn."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Mellannamn."
                    },
                    "familyName": {
                      "type": "string",
                      "description": "Efternamn."
                    },
                    "emails": {
                      "type": "array",
                      "description": "Personens e-postadress. Kan anges per roll när behovet finns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "anställd",
                              "elev",
                              "vårdnadshavare"
                            ]
                          }
                        },
                        "required": [
                          "email"
                        ]
                      }
                    },
                    "phoneNumbers": {
                      "type": "array",
                      "description": "En lista med telefonnummer till personen.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "description": "Telefonnumret."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "hem",
                              "arbete"
                            ]
                          },
                          "mobile": {
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "addresses": {
                      "type": "array",
                      "description": "Personens postadresser.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "folkbokföringsadress",
                            "enum": [
                              "folkbokföringsadress",
                              "vistelseadress",
                              "fakturaadress"
                            ]
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "Gatuadress."
                          },
                          "locality": {
                            "type": "string",
                            "description": "Postort."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Postadress."
                          },
                          "country": {
                            "type": "string",
                            "description": "Land."
                          }
                        }
                      }
                    },
                    "photos": {
                      "type": "array",
                      "description": "Bild på personen.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "photo": {
                            "type": "string",
                            "format": "uri",
                            "description": "En länk där bildfilen kan hämtas."
                          },
                          "type": {
                            "type": "string",
                            "description": "Typ av bild.",
                            "enum": [
                              "photo",
                              "thumbnail"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "I SS12000 är det ett krav att ett objekt har samma överförings-ID mellan samtliga ingående system och således är det ett enda namespace för de gemensamma ID:na. Objektidentifikatorn är den nyckel som skall vara persistent mellan olika processer (enl figur 1).\n"
                    },
                    "meta": {
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "lastModified": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "eduPersonPrincipalName": {
                      "type": "string",
                      "description": "Den identifierare som ska användas för att identifiera användaren i skilda e-tjänster. Identifieraren ska vara en spårbar, persistent och globalt unik sträng. Den ska bestå av en lokalt unik användaridentifierare, ett ’@’ och en domän. En domän är ofta, men inte nödvändigtvis, samma som organisationens internet-domännamn. _Exempel: kalko@edu.goteborg.se_\n"
                    },
                    "norEduPersonNIN": {
                      "type": "object",
                      "description": "Personnummer.",
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "Svenskt personnummer, tilldelat personnummer eller Skatteverkets\nsamordningsnummer för personen. Ska anges med 12 siffror utan\nseparatorer. _Exempel: 200112240123_\n\nSamordningsnummer ska anges med 12 siffror utan separator.\nFödelsedagen adderas med talet 60, det vill säga någon född den 24\ni en månad får talet 84 som dag. _Exempel: 200112840123_\n\nSaknas både personnummer och samordningsnummer så förekommer det att\n\"tillfälligt personnummer\" definieras i elevregistret. Dessa är möjliga\natt beskriva i detta fält och i så fall tillåts de två första positionerna\nefter datumdelen att vara bokstäver. _Exempel: 20130101TF01_\n",
                          "pattern": "^\\d{8}[A-Z0-9]{2}\\d{2}$"
                        },
                        "nationality": {
                          "type": "string",
                          "default": "SE",
                          "description": "Landskod för det land som personnumret härstammar från, enligt ISO 3166-1 alpha-2.\n"
                        }
                      },
                      "required": [
                        "value"
                      ]
                    },
                    "givenName": {
                      "type": "string",
                      "description": "Förnamn."
                    },
                    "middleName": {
                      "type": "string",
                      "description": "Mellannamn."
                    },
                    "familyName": {
                      "type": "string",
                      "description": "Efternamn."
                    },
                    "emails": {
                      "type": "array",
                      "description": "Personens e-postadress. Kan anges per roll när behovet finns.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "anställd",
                              "elev",
                              "vårdnadshavare"
                            ]
                          }
                        },
                        "required": [
                          "email"
                        ]
                      }
                    },
                    "phoneNumbers": {
                      "type": "array",
                      "description": "En lista med telefonnummer till personen.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "string",
                            "description": "Telefonnumret."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "hem",
                              "arbete"
                            ]
                          },
                          "mobile": {
                            "type": "boolean",
                            "default": true
                          }
                        },
                        "required": [
                          "number"
                        ]
                      }
                    },
                    "addresses": {
                      "type": "array",
                      "description": "Personens postadresser.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "folkbokföringsadress",
                            "enum": [
                              "folkbokföringsadress",
                              "vistelseadress",
                              "fakturaadress"
                            ]
                          },
                          "streetAddress": {
                            "type": "string",
                            "description": "Gatuadress."
                          },
                          "locality": {
                            "type": "string",
                            "description": "Postort."
                          },
                          "postalCode": {
                            "type": "string",
                            "description": "Postadress."
                          },
                          "country": {
                            "type": "string",
                            "description": "Land."
                          }
                        }
                      }
                    },
                    "photos": {
                      "type": "array",
                      "description": "Bild på personen.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "photo": {
                            "type": "string",
                            "format": "uri",
                            "description": "En länk där bildfilen kan hämtas."
                          },
                          "type": {
                            "type": "string",
                            "description": "Typ av bild.",
                            "enum": [
                              "photo",
                              "thumbnail"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid personname supplied"
          },
          "404": {
            "description": "Person not found"
          }
        }
      },
      "delete": {
        "tags": [
          "person"
        ],
        "summary": "Delete person",
        "description": "This can only be done by the logged in person.",
        "operationId": "deletePerson",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The person that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid personname supplied"
          },
          "404": {
            "description": "Person not found"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "components": {
    "schemas": {
      "Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "meta": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "lastModified": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "displayName": {
            "type": "string",
            "description": "Namn på aktiviteten, i presentationssyfte."
          },
          "calendarEventsRequired": {
            "type": "boolean",
            "description": "Detta ska uttrycka huruvida aktiviteten ska vara underlag för generering av lektion eller inte.\n"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Datum för när aktiviteten startar (ISO8601 format, t.ex. \"2016-10-15\")\n"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "Datum för när aktiviteten slutar (ISO8601 format, t.ex. \"2016-10-15\".\n"
          },
          "activityType": {
            "type": "string",
            "enum": [
              "Undervisning",
              "Elevaktivitet",
              "Läraraktivitet",
              "Mentorskap",
              "Omsorg",
              "Övrigt"
            ],
            "description": "Beskriver vilken typ av aktivitet som avses."
          },
          "comment": {
            "type": "string",
            "description": "En text med kompletterande information."
          },
          "minutesPlanned": {
            "type": "integer",
            "description": "Den totalt planerade tiden i minuter."
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "displayName": {
                  "type": "string"
                },
                "startDate": {
                  "type": "string",
                  "format": "date"
                },
                "endDate": {
                  "type": "string",
                  "format": "date"
                }
              }
            },
            "description": "De grupper som är kopplade till aktiviteten."
          },
          "teachers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Identifierare för lärarens anställning (Duty)."
                },
                "displayName": {
                  "type": "string",
                  "description": "Lärarens namn.",
                  "readOnly": true
                },
                "startDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Datum för när lärarens deltagande i aktiviteten startar (ISO8601 format, t.ex. \"2016-10-15\")."
                },
                "endDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Datum för när lärarens deltagande i aktiviteten slutar (ISO8601 format, t.ex. \"2016-10-15\")."
                },
                "minutesPlanned": {
                  "type": "integer",
                  "description": "Det antal minuter läraren är kopplad till aktiviteten"
                }
              }
            },
            "description": "De lärare (Duty-objekt) som är kopplade till aktiviteten."
          },
          "students": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Identifierare för personen."
                },
                "displayName": {
                  "type": "string",
                  "description": "Ett läsbart namn för att identifiera personen i visningssyfte. READ-ONLY.",
                  "readOnly": true
                },
                "startDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Datum för när lärarens deltagande i aktiviteten startar (ISO8601 format, t.ex. \"2016-10-15\")."
                },
                "endDate": {
                  "type": "string",
                  "format": "date",
                  "description": "Datum för när lärarens deltagande i aktiviteten slutar (ISO8601 format, t.ex. \"2016-10-15\")."
                }
              },
              "description": "De elever som är kopplade till aktiviteten."
            }
          },
          "syllabus": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "displayName": {
                "type": "string",
                "description": "Beskrivning av ämnesplanen",
                "readOnly": true
              }
            },
            "description": "Det kurs- eller ämnesplan som aktiviteten är knuten till."
          },
          "owner": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "displayName": {
                "type": "string",
                "description": "Ett läsbart namn för att identifiera skolenheten. READ-ONLY.",
                "readOnly": true
              }
            },
            "description": "Den skolenhet som aktiviteten är knuten till."
          },
          "parentActivity": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Identifierare för den ursprungliga aktiviteten."
              },
              "displayName": {
                "type": "string",
                "description": "Ett läsbart namn för att identifiera aktiviteten. READ-ONLY.",
                "readOnly": true
              }
            },
            "description": "Möjlighet att koppla aktiviteten till en ursprunglig \"föräldraaktivitet\""
          }
        },
        "required": [
          "id",
          "displayName",
          "calendarEventsRequired",
          "startDate",
          "endDate"
        ]
      },
      "AggregatedAttendance": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Startdatum för aggregerad närvaro (ISO8601 format, e.g. \"2016-10-15\")"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "Slutdatum för aggregerad närvaro (ISO8601 format, t.ex. \"2016-10-15\")"
          },
          "attendanceSum": {
            "type": "integer",
            "description": "Summerad tid i minuter för elevens närvaro på kalenderhändelser"
          },
          "validAbsenceSum": {
            "type": "integer",
            "description": "Summerad tid i minuter för elevens giltiga frånvaro på kalenderhändelser"
          },
          "invalidAbsenceSum": {
            "type": "integer",
            "description": "Summerad tid i minuter för elevens ogiltiga frånvaro på kalenderhändelser"
          },
          "otherAttendanceSum": {
            "type": "integer",
            "description": "Summerad tid i minuter för elevens deltagande i annan skolaktivitet, såsom elevråd, i stället för deltagande på kalenderhändelser"
          },
          "reportedSum": {
            "type": "integer",
            "description": "Summan av den rapporterade tiden för elevens kalenderhändelser"
          },
          "offeredSum": {
            "type": "integer",
            "description": "Summan av den erbjudna tiden minuter för elevens kalenderhändelser"
          },
          "activity": {
            "allOf": [
              {
                "type": "object",
                "required": [
                  "id",
                  "displayName"
                ],
                "properties": {
                  "displayName": {
                    "type": "string",
                    "readOnly": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "Referens till en aktivitet"
              }
            ]
          },
          "student": {
            "allOf": [
              {
                "type": "object",
                "required": [
                  "id",
                  "displayName"
                ],
                "properties": {
                  "displayName": {
                    "type": "string",
                    "readOnly": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "Referens till en person"
              }
            ]
          }
        },
        "required": [
          "startDate",
          "endDate",
          "activity",
          "student"
        ]
      },
      "Attenance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Ett UUID för närvaron."
          },
          "meta": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "lastModified": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "isReported": {
            "type": "boolean",
            "description": "Anger om lektionen är explicit rapporterad."
          },
          "attendanceMinutes": {
            "type": "integer",
            "description": "Tid i minuter för elevens närvaro på kalenderhändelsen."
          },
          "validAbsenceMinutes": {
            "type": "integer",
            "description": "Tid i minuter för elevens giltiga frånvaro på kalenderhändelsen."
          },
          "invalidAbsenceMinutes": {
            "type": "integer",
            "description": "Tid i minuter för elevens ogiltiga frånvaro på kalenderhändelsen."
          },
          "otherAttendanceMinutes": {
            "type": "integer",
            "description": "Tid i  minuter för elevens deltagande i annan skolaktivitet, såsom elevråd, i stället för deltagande på kalenderhändelsen."
          },
          "absenceReason": {
            "type": "string",
            "description": "Angiven anledning till frånvaro."
          },
          "reportedTimestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Tidpunkt för rapportering av kalenderhändelsen."
          },
          "calendarEvent": {
            "type": "string",
            "format": "uuid"
          },
          "student": {
            "allOf": [
              {
                "type": "object",
                "required": [
                  "id",
                  "displayName"
                ],
                "properties": {
                  "displayName": {
                    "type": "string",
                    "readOnly": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "Referens till person som närvaron gäller."
              }
            ]
          }
        },
        "required": [
          "isReported",
          "calendarEvent",
          "student",
          "meta"
        ]
      },
      "CalendarEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Ett UUID för kalenderhändelsen."
          },
          "meta": {
            "type": "object",
            "readOnly": true,
            "properties": {
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "lastModified": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "description": "Kalenderhändelsens starttid med datum och tid (ISO8601 format tex \"2015-12-12T10:00:00\")."
          },
          "endTime": {
            "type": "boolean",
            "format": "date-time",
            "description": "Kalenderhändelsens sluttid med datum och tid (ISO8601 format tex \"2015-12-12T10:00:00\")."
          },
          "cancelled": {
            "type": "boolean",
            "description": "Inställd används för att ange att en planerad kalenderhändelse inte ska äga rum till följd av en avbokning eller annan tillfällig avvikelse. Förvalt värde är false."
          },
          "comment": {
            "type": "string",
            "description": "En text med kompletterande information."
          },
          "teachingLengthStudent": {
            "type": "integer",
            "description": "Faktisk undervisningstid, i minuter, för studenter. Tiden kan vara kortare eller längre än tiden för kalenderhändelsen till exempel då en rast ingår i tiden."
          },
          "teachingLengthTeacher": {
            "type": "integer",
            "description": "Faktisk undervisningstid, i minuter, för lärare. Lärartiden kan vara kortare eller längre än tiden för kalenderhändelsen."
          },
          "activity": {
            "allOf": [
              {
                "type": "object",
                "required": [
                  "id",
                  "displayName"
                ],
                "properties": {
                  "displayName": {
                    "type": "string",
                    "readOnly": true
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "Referens till en aktivitet"
              }
            ]
          },
          "studentExceptions": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "displayName"
                  ],
                  "properties": {
                    "displayName": {
                      "type": "string",
                      "readOnly": true
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                {
                  "description": "Anger avvikelser beträffande studentens deltagande, tid och längd för ett enstaka kalendertillfälle.",
                  "properties": {
                    "participates": {
                      "type": "boolean",
                      "description": "Används för att ange om en grupp deltar på ett visst kalendertillfälle."
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Starttid för undantaget (ISO8601 format tex \"2015-12-12T10:30:00\")."
                    },
                    "endTime": {
                      "type": "boolean",
                      "format": "date-time",
                      "description": "Sluttid för undantaget (ISO8601 format tex \"2015-12-12T11:00:00\")."
                    },
                    "teachingLength": {
                      "type": "integer",
                      "description": "Undervisningstid i minuter för gruppen. Om den ej anges så gäller det som är angivet i, i första hand, CalendarEvent, och annars i Activity."
                    }
                  },
                  "required": [
                    "participates"
                  ]
                }
              ]
            }
          }
        },
        "required": [
          "isReported",
          "calendarEvent",
          "student"
        ]
      }
    },
    "parameters": {
      "FilterParam": {
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Filters according to [RFC7644](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)."
      }
    }
  }
}